#!/bin/bash
# –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Ç–µ—Ä-—Å–ø–∏—Å–∫–∞ URL –¥–ª—è –ª—é–±–æ–≥–æ —Å–∞–π—Ç–∞

DOMAIN="$1"
MIN_SIZE="${2:-5000}"  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã

if [ -z "$DOMAIN" ]; then
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 DOMAIN [MIN_SIZE]"
    echo "–ü—Ä–∏–º–µ—Ä: $0 sluga-narodu.com 5000"
    exit 1
fi

echo "üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Ç–µ—Ä-—Å–ø–∏—Å–∫–∞ URL –¥–ª—è $DOMAIN"
echo "=============================================="
echo "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã: $MIN_SIZE –±–∞–π—Ç"
echo ""

# –®–∞–≥ 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö HTML URL
echo "üîç –®–∞–≥ 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö HTML URL..."
curl -s "http://web.archive.org/cdx/search/cdx?url=${DOMAIN}/*&output=json&fl=original,timestamp,statuscode,mimetype,length&filter=mimetype:text/html&filter=statuscode:200&filter=length:>${MIN_SIZE}&collapse=original&limit=50000" > ${DOMAIN}_raw.json

raw_count=$(($(jq length ${DOMAIN}_raw.json) - 1))
echo "‚úÖ –ù–∞–π–¥–µ–Ω–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö HTML URL: $raw_count"

if [ "$raw_count" -eq 0 ]; then
    echo "‚ùå URL –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ–º–µ–Ω –∏–ª–∏ —É–º–µ–Ω—å—à–∏—Ç–µ MIN_SIZE"
    exit 1
fi

# –®–∞–≥ 2: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
echo ""
echo "üßπ –®–∞–≥ 2: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü..."

jq -r '
if length > 1 then
  .[1:] | map({
    original: .[0],
    timestamp: .[1],
    statuscode: .[2],
    mimetype: .[3],
    size: (.[4] | tonumber? // 0)
  }) | map(select(
    # –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
    (.original | test("/wp-admin|/admin|/login|/auth|/dashboard") | not) and
    (.original | test("/api/|/rest/|/json/|/xml/|/ajax") | not) and
    (.original | test("/css/|/js/|/images/|/img/|/assets/|/static/|/media/") | not) and
    (.original | test("/404|/error|/maintenance|/503") | not) and
    (.original | test("robots\\.txt|sitemap\\.xml|\\.well-known/") | not) and
    (.original | test("/search|/tag/|/category/|/archive") | not) and
    (.original | test("\\?page=|\\?p=|/page/|\\?offset=") | not) and
    (.original | test("/feed|/rss|/atom|/trackback|/xmlrpc") | not) and

    # –†–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
    (.original | test("\\.(css|js|png|jpg|jpeg|gif|ico|pdf|zip|doc|docx|txt|xml)$") | not) and

    # CMS —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø—É—Ç–∏
    (.original | test("/wp-content|/wp-includes|/wp-json") | not) and
    (.original | test("/node_modules|/vendor|/.git") | not) and

    # –°–ª—É–∂–µ–±–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    (.original | test("/debug|/test|/tmp|/temp") | not)
  ))
else
  []
end
' ${DOMAIN}_raw.json > ${DOMAIN}_filtered.json

filtered_count=$(jq length ${DOMAIN}_filtered.json)
excluded_count=$((raw_count - filtered_count))

echo "‚úÖ –ü–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: $filtered_count URL"
echo "üóëÔ∏è  –ò—Å–∫–ª—é—á–µ–Ω–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö: $excluded_count URL"

# –®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä-—Å–ø–∏—Å–∫–∞
echo ""
echo "üìä –®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Ç–µ—Ä-—Å–ø–∏—Å–∫–∞ —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏..."

jq '[.[] | {
  original: .original,
  first_archived: .timestamp,
  size: .size,
  priority_score: (
    # –ü—Ä–æ—Å—Ç–æ–π —Å–∫–æ—Ä –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞–∑–º–µ—Ä–∞ –∏ –≥–ª—É–±–∏–Ω—ã URL
    (.size / 1000) +
    (50 - (((.original | split("/") | length) - 3) * 5))
  )
}] | sort_by(-.priority_score)' ${DOMAIN}_filtered.json > ${DOMAIN}_master_list.json

# –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
echo ""
echo "‚úÖ –ú–ê–°–¢–ï–†-–°–ü–ò–°–û–ö –°–û–ó–î–ê–ù!"
echo "========================"
echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
echo "  –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ URL: $raw_count"
echo "  –ü–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: $filtered_count"
echo "  –ò—Å–∫–ª—é—á–µ–Ω–æ: $excluded_count"
echo ""
echo "üìÅ –§–∞–π–ª—ã:"
echo "  ${DOMAIN}_raw.json - –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ URL"
echo "  ${DOMAIN}_filtered.json - –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏"
echo "  ${DOMAIN}_master_list.json - —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Ç–µ—Ä-—Å–ø–∏—Å–æ–∫"
echo ""
echo "üéØ –¢–û–ü-10 URL –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É:"
jq -r '.[] | "\(.priority_score | floor)\t\(.original)"' ${DOMAIN}_master_list.json | head -10 | while IFS=$'\t' read score url; do
    echo "  $score: $url"
done

echo ""
echo "üí° –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–∞—Å—Ç–µ—Ä-—Å–ø–∏—Å–æ–∫ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–Ω–∞–ø—à–æ—Ç–æ–≤ –Ω–∞ –ª—é–±—É—é –¥–∞—Ç—É!"