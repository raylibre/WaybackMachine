#!/bin/bash
# –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Ç–µ—Ä-—Å–ø–∏—Å–∫–∞ URL —Å —É–º–Ω–æ–π –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–µ–π

DOMAIN="$1"
MIN_SIZE="${2:-5000}"

if [ -z "$DOMAIN" ]; then
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 DOMAIN [MIN_SIZE]"
    echo "–ü—Ä–∏–º–µ—Ä: $0 sluga-narodu.com 5000"
    exit 1
fi

echo "üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Ç–µ—Ä-—Å–ø–∏—Å–∫–∞ URL –¥–ª—è $DOMAIN (—Å –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–µ–π)"
echo "============================================================"

# –®–∞–≥ 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö HTML URL
echo "üîç –®–∞–≥ 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö HTML URL..."
curl -s "http://web.archive.org/cdx/search/cdx?url=${DOMAIN}/*&output=json&fl=original,timestamp,statuscode,mimetype,length&filter=mimetype:text/html&filter=statuscode:200&collapse=original&limit=50000" > ${DOMAIN}_raw.json

raw_count=$(($(jq length ${DOMAIN}_raw.json) - 1))
echo "‚úÖ –ù–∞–π–¥–µ–Ω–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö HTML URL: $raw_count"

# –®–∞–≥ 2: –ë–∞–∑–æ–≤–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è + –∏—Å–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
echo ""
echo "üßπ –®–∞–≥ 2: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –∏ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤..."

jq -r --argjson min_size "$MIN_SIZE" '
if length > 1 then
  .[1:] | map({
    original: .[0],
    timestamp: .[1],
    statuscode: .[2],
    mimetype: .[3],
    size: (.[4] | tonumber? // 0)
  }) | map(select(
    # –†–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    (.size > $min_size) and

    # –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã
    (.original | test("/wp-admin|/admin|/login|/auth|/dashboard") | not) and
    (.original | test("/api/|/rest/|/json/|/xml/|/ajax") | not) and
    (.original | test("/css/|/js/|/images/|/img/|/assets/|/static/|/media/") | not) and
    (.original | test("/404|/error|/maintenance|/503") | not) and
    (.original | test("robots\\.txt|sitemap\\.xml|\\.well-known/") | not) and
    (.original | test("/search|/tag/|/category/|/archive") | not) and
    (.original | test("\\?page=|\\?p=|/page/|\\?offset=") | not) and
    (.original | test("/feed|/rss|/atom|/trackback|/xmlrpc") | not) and

    # –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    (.original | test("/embed/?$|\\?amp=1|\\?utm_|/amp/?$|/print/?$|\\?preview=") | not) and

    # –†–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
    (.original | test("\\.(css|js|png|jpg|jpeg|gif|ico|pdf|zip|doc|docx|txt|xml)$") | not) and

    # CMS —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø—É—Ç–∏
    (.original | test("/wp-content|/wp-includes|/wp-json") | not) and
    (.original | test("/node_modules|/vendor|/.git") | not) and

    # –°–ª—É–∂–µ–±–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    (.original | test("/debug|/test|/tmp|/temp") | not)
  ))
else
  []
end
' ${DOMAIN}_raw.json > ${DOMAIN}_filtered.json

filtered_count=$(jq length ${DOMAIN}_filtered.json)

# –®–∞–≥ 3: –£–º–Ω–∞—è –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è –ø–æ—Ö–æ–∂–∏—Ö URL
echo ""
echo "üîÑ –®–∞–≥ 3: –î–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è –ø–æ—Ö–æ–∂–∏—Ö URL..."

jq -r '
# –°–æ–∑–¥–∞–µ–º –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–ª—é—á –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏
map(. + {
  normalized_key: (.original |
    # –£–±–∏—Ä–∞–µ–º trailing slash –¥–ª—è –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–∏—è
    gsub("/$"; "") |
    # –£–±–∏—Ä–∞–µ–º –Ω–æ–º–µ—Ä–Ω—ã–µ —Å—É—Ñ—Ñ–∏–∫—Å—ã (-2, -3, etc)
    gsub("-[0-9]+$"; "") |
    # –£–±–∏—Ä–∞–µ–º query –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    split("?")[0]
  )
}) |
# –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–º—É –∫–ª—é—á—É
group_by(.normalized_key) |
map(
  # –ò–∑ –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø—ã –≤—ã–±–∏—Ä–∞–µ–º –ª—É—á—à–∏–π –≤–∞—Ä–∏–∞–Ω—Ç
  sort_by([
    # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –ù–ï –∏–º–µ–µ—Ç –Ω–æ–º–µ—Ä–Ω–æ–π —Å—É—Ñ—Ñ–∏–∫—Å
    (.original | test("-[2-9]") | not),
    # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –±–æ–ª—å—à–∏–π —Ä–∞–∑–º–µ—Ä
    -.size,
    # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –±–æ–ª–µ–µ —Å–≤–µ–∂–∏–π timestamp
    -.timestamp
  ]) | .[0]
) |
# –£–±–∏—Ä–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–ª—é—á
map(del(.normalized_key))
' ${DOMAIN}_filtered.json > ${DOMAIN}_deduped.json

deduped_count=$(jq length ${DOMAIN}_deduped.json)
duplicates_removed=$((filtered_count - deduped_count))

# –®–∞–≥ 4: –§–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Ç–µ—Ä-—Å–ø–∏—Å–æ–∫
echo ""
echo "üìä –®–∞–≥ 4: –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä-—Å–ø–∏—Å–∫–∞..."

jq '[.[] | {
  original: .original,
  first_archived: .timestamp,
  size: .size,
  priority_score: (
    (.size / 1000) +
    (50 - (((.original | split("/") | length) - 3) * 5))
  )
}] | sort_by(-.priority_score)' ${DOMAIN}_deduped.json > ${DOMAIN}_master_list.json

# –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
echo ""
echo "‚úÖ –ú–ê–°–¢–ï–†-–°–ü–ò–°–û–ö –°–û–ó–î–ê–ù!"
echo "========================"
echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
echo "  –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ URL: $raw_count"
echo "  –ü–æ—Å–ª–µ –±–∞–∑–æ–≤–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: $filtered_count"
echo "  –£–¥–∞–ª–µ–Ω–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: $duplicates_removed"
echo "  –§–∏–Ω–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫: $deduped_count"
echo ""

# –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
echo "üîç –ü—Ä–∏–º–µ—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤:"
echo "–ò—Å—Ö–æ–¥–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã zbory-zakarpatskoi... ‚Üí –í—ã–±—Ä–∞–Ω –ª—É—á—à–∏–π –≤–∞—Ä–∏–∞–Ω—Ç"

echo ""
echo "üéØ –¢–û–ü-10 URL –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É:"
jq -r '.[] | "\(.priority_score | floor)\t\(.original)"' ${DOMAIN}_master_list.json | head -10 | while IFS=$'\t' read score url; do
    echo "  $score: $url"
done

echo ""
echo "üìÅ –§–∞–π–ª—ã:"
echo "  ${DOMAIN}_master_list.json - —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Ç–µ—Ä-—Å–ø–∏—Å–æ–∫ (–ò–°–ü–û–õ–¨–ó–£–ô–¢–ï –≠–¢–û–¢)"